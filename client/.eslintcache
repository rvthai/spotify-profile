[{"D:\\projects\\spotify-profile\\client\\src\\utils\\index.js":"1","D:\\projects\\spotify-profile\\client\\src\\components\\Trend.js":"2","D:\\projects\\spotify-profile\\client\\src\\icons\\index.js":"3","D:\\projects\\spotify-profile\\client\\src\\styles\\Nav.js":"4","D:\\projects\\spotify-profile\\client\\src\\styles\\Main.js":"5","D:\\projects\\spotify-profile\\client\\src\\styles\\GlobalStyle.js":"6","D:\\projects\\spotify-profile\\client\\src\\pages\\Profile.js":"7","D:\\projects\\spotify-profile\\client\\src\\components\\TrendsPreview.js":"8","D:\\projects\\spotify-profile\\client\\src\\styles\\Section.js":"9","D:\\projects\\spotify-profile\\client\\src\\components\\TopTracksPreview.js":"10","D:\\projects\\spotify-profile\\client\\src\\components\\User.js":"11","D:\\projects\\spotify-profile\\client\\src\\components\\TopArtistsPreview.js":"12","D:\\projects\\spotify-profile\\client\\src\\components\\TopGenresPreview.js":"13","D:\\projects\\spotify-profile\\client\\src\\styles\\Button.js":"14","D:\\projects\\spotify-profile\\client\\src\\styles\\Header.js":"15","D:\\projects\\spotify-profile\\client\\src\\styles\\mixins.js":"16","D:\\projects\\spotify-profile\\client\\src\\styles\\index.js":"17","D:\\projects\\spotify-profile\\client\\src\\styles\\MoreLink.js":"18"},{"size":4481,"mtime":1611618309206,"results":"19","hashOfConfig":"20"},{"size":3536,"mtime":1611635691157,"results":"21","hashOfConfig":"20"},{"size":563,"mtime":1611604118909,"results":"22","hashOfConfig":"20"},{"size":522,"mtime":1611605644583,"results":"23","hashOfConfig":"20"},{"size":418,"mtime":1611607787798,"results":"24","hashOfConfig":"20"},{"size":1941,"mtime":1611635509378,"results":"25","hashOfConfig":"20"},{"size":6011,"mtime":1611633811900,"results":"26","hashOfConfig":"20"},{"size":903,"mtime":1611635514283,"results":"27","hashOfConfig":"20"},{"size":246,"mtime":1611625026843,"results":"28","hashOfConfig":"20"},{"size":1875,"mtime":1611643002903,"results":"29","hashOfConfig":"20"},{"size":1954,"mtime":1611626194891,"results":"30","hashOfConfig":"20"},{"size":1638,"mtime":1611638865192,"results":"31","hashOfConfig":"20"},{"size":1943,"mtime":1611625650027,"results":"32","hashOfConfig":"20"},{"size":327,"mtime":1611534692277,"results":"33","hashOfConfig":"20"},{"size":382,"mtime":1611636636101,"results":"34","hashOfConfig":"20"},{"size":761,"mtime":1611639180032,"results":"35","hashOfConfig":"20"},{"size":521,"mtime":1611636238535,"results":"36","hashOfConfig":"20"},{"size":424,"mtime":1611636574926,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15cb6kc",{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\spotify-profile\\client\\src\\utils\\index.js",[],"D:\\projects\\spotify-profile\\client\\src\\components\\Trend.js",["75","76","77"],"D:\\projects\\spotify-profile\\client\\src\\icons\\index.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\Nav.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\Main.js",["78"],"D:\\projects\\spotify-profile\\client\\src\\styles\\GlobalStyle.js",[],"D:\\projects\\spotify-profile\\client\\src\\pages\\Profile.js",["79","80","81"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// API\r\nimport {\r\n  getUser,\r\n  getFollowing,\r\n  getPlaylists,\r\n  getTopTracks,\r\n  getTopArtists,\r\n  getSeveralArtists,\r\n} from \"utils\";\r\n\r\n// Components\r\nimport User from \"components/User\";\r\nimport TrendsPreview from \"components/TrendsPreview\";\r\nimport TopTracksPreview from \"components/TopTracksPreview\";\r\nimport TopArtistsPreview from \"components/TopArtistsPreview\";\r\nimport TopGenresPreview from \"components/TopGenresPreview\";\r\n\r\n// Styles\r\nimport { Main } from \"styles\";\r\nimport { mixins } from \"styles\";\r\n\r\nfunction Profile() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Data for current top track and artist\r\n  const [currentTopTrack, setCurrentTopTrack] = useState(null);\r\n  const [currentTopArtist, setCurrentTopArtist] = useState(null);\r\n\r\n  // Data for the previews\r\n  const [topTracks, setTopTracks] = useState(null);\r\n  const [topArtists, setTopArtists] = useState(null);\r\n\r\n  // Data for genre data\r\n  const [topGenres, setTopGenres] = useState(null);\r\n  const [total, setTotal] = useState(0);\r\n  const [max, setMax] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n    getCurrentTopTrack();\r\n    getCurrentTopArtist();\r\n    getTopTracksData();\r\n    getTopArtistsData();\r\n    getTopGenres();\r\n  }, []);\r\n\r\n  const getUserData = async () => {\r\n    try {\r\n      const userData = await getUser();\r\n      const followingData = await getFollowing();\r\n      const playlistsData = await getPlaylists();\r\n\r\n      const data = {\r\n        user: userData.data,\r\n        following: followingData.data,\r\n        playlists: playlistsData.data,\r\n      };\r\n\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCurrentTopTrack = async () => {\r\n    try {\r\n      const response = await getTopTracks({\r\n        time_range: \"short_term\",\r\n        limit: 1,\r\n      });\r\n      setCurrentTopTrack(response.data.items[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCurrentTopArtist = async () => {\r\n    try {\r\n      const response = await getTopArtists({\r\n        time_range: \"short_term\",\r\n        limit: 1,\r\n      });\r\n      setCurrentTopArtist(response.data.items[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getTopTracksData = async () => {\r\n    try {\r\n      const response = await getTopTracks({\r\n        time_range: \"long_term\",\r\n        limit: 5,\r\n      });\r\n      setTopTracks(response.data.items);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getTopArtistsData = async () => {\r\n    try {\r\n      const response = await getTopArtists({\r\n        time_range: \"long_term\",\r\n        limit: 5,\r\n      });\r\n      setTopArtists(response.data.items);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getTopGenres = async () => {\r\n    // Get the top tracks\r\n    const response = await getTopTracks({\r\n      time_range: \"long_term\",\r\n      limit: 50,\r\n    });\r\n    const tracks = response.data.items;\r\n\r\n    // Get the id of the first artist of each track\r\n    const artists = [];\r\n    for (let i = 0; i < tracks.length; i++) {\r\n      const artist = tracks[i].artists[0];\r\n      if (!artists.includes(artist)) {\r\n        artists.push(artist.id);\r\n      }\r\n    }\r\n\r\n    // Since the getSeveralArtist API has a max limit of 50, we must split up the list if there is more than 50 artists\r\n    let artists_groups = [];\r\n    while (artists.length > 0) {\r\n      if (artists.length >= 50) {\r\n        artists_groups.push(artists.splice(0, 50)); // this gets 50 artists and modifies the array\r\n      } else {\r\n        artists_groups.push(artists.splice(0, artists.length)); // up to the end of the array if less than 50\r\n      }\r\n    }\r\n\r\n    // Make an API call to get the artists and their genres\r\n    let data = null;\r\n    for (let i = 0; i < artists_groups.length; i++) {\r\n      let id_str = artists_groups[i].join(\",\"); // Join a group of artists into a full string to be passed as a query param\r\n      let response = await getSeveralArtists(id_str); // Make the API call\r\n      data = response.data.artists;\r\n    }\r\n\r\n    // Create a map of each genre and their occurence\r\n    let genresMap = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n      let genres = data[i].genres;\r\n      for (let j = 0; j < genres.length; j++) {\r\n        let genre = genres[j];\r\n        if (!genresMap[genre]) {\r\n          genresMap[genre] = 0;\r\n        }\r\n        genresMap[genre] += 1;\r\n      }\r\n    }\r\n\r\n    // Get the top five genres that occur the most by sorting the object (must convert object to array first)\r\n    let entries = Object.entries(genresMap);\r\n    entries.sort((a, b) => b[1] - a[1]);\r\n    entries = entries.splice(0, 5);\r\n\r\n    // Get the total needed to calculate the percentages for the chart\r\n    const t = entries.reduce((accumulator, entry) => accumulator + entry[1], 0);\r\n    //setTotal(total);\r\n    const m = entries.reduce(\r\n      (accumulator, entry) => Math.max(accumulator, entry[1]),\r\n      0\r\n    );\r\n    //setMax((m / t) * 100);\r\n\r\n    // Remake map with top five genres and their respective percentages\r\n    genresMap = entries.reduce((accumulator, entry) => {\r\n      const key = entry[0];\r\n      const value = Math.round((entry[1] / t) * 100); // Convert to a percentage\r\n      accumulator[key] = value;\r\n      return accumulator;\r\n    }, {});\r\n\r\n    // Change state\r\n    setTopGenres(genresMap);\r\n    setMax((m / t) * 100);\r\n    setTotal(total);\r\n  };\r\n\r\n  return (\r\n    <Main>\r\n      {user ? <User data={user} /> : null}\r\n      {currentTopArtist && currentTopTrack ? (\r\n        <TrendsPreview artist={currentTopArtist} track={currentTopTrack} />\r\n      ) : null}\r\n      {topTracks ? <TopTracksPreview data={topTracks} /> : null}\r\n      {topArtists ? <TopArtistsPreview data={topArtists} /> : null}\r\n      {topGenres ? <TopGenresPreview data={topGenres} max={max} /> : null}\r\n    </Main>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\projects\\spotify-profile\\client\\src\\components\\TrendsPreview.js",["82"],"D:\\projects\\spotify-profile\\client\\src\\styles\\Section.js",[],"D:\\projects\\spotify-profile\\client\\src\\components\\TopTracksPreview.js",["83"],"D:\\projects\\spotify-profile\\client\\src\\components\\User.js",[],"D:\\projects\\spotify-profile\\client\\src\\components\\TopArtistsPreview.js",["84","85"],"D:\\projects\\spotify-profile\\client\\src\\components\\TopGenresPreview.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\Button.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\Header.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\mixins.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\index.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\MoreLink.js",[],{"ruleId":"86","severity":1,"message":"87","line":83,"column":7,"nodeType":"88","messageId":"89","endLine":83,"endColumn":14},{"ruleId":"86","severity":1,"message":"90","line":91,"column":7,"nodeType":"88","messageId":"89","endLine":91,"endColumn":20},{"ruleId":"86","severity":1,"message":"91","line":111,"column":7,"nodeType":"88","messageId":"89","endLine":111,"endColumn":22},{"ruleId":"86","severity":1,"message":"92","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":13},{"ruleId":"86","severity":1,"message":"93","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"94","line":23,"column":10,"nodeType":"88","messageId":"89","endLine":23,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":48,"column":6,"nodeType":"97","endLine":48,"endColumn":8,"suggestions":"98"},{"ruleId":"86","severity":1,"message":"99","line":11,"column":9,"nodeType":"88","messageId":"89","endLine":11,"endColumn":14},{"ruleId":"86","severity":1,"message":"100","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"100","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":14},{"ruleId":"86","severity":1,"message":"99","line":8,"column":9,"nodeType":"88","messageId":"89","endLine":8,"endColumn":14},"no-unused-vars","'Buttons' is assigned a value but never used.","Identifier","unusedVar","'PrimaryButton' is assigned a value but never used.","'SecondaryButton' is assigned a value but never used.","'media' is defined but never used.","'styled' is defined but never used.","'mixins' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTopGenres'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'color' is assigned a value but never used.","'Link' is defined but never used.",{"desc":"102","fix":"103"},"Update the dependencies array to be: [getTopGenres]",{"range":"104","text":"105"},[1326,1328],"[getTopGenres]"]