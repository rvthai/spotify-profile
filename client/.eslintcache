[{"D:\\projects\\spotify-profile\\client\\src\\styles\\index.js":"1","D:\\projects\\spotify-profile\\client\\src\\styles\\PageHeader.js":"2","D:\\projects\\spotify-profile\\client\\src\\styles\\mixins.js":"3","D:\\projects\\spotify-profile\\client\\src\\utils\\index.js":"4","D:\\projects\\spotify-profile\\client\\src\\pages\\TopGenres.js":"5","D:\\projects\\spotify-profile\\client\\src\\components\\Genre.js":"6","D:\\projects\\spotify-profile\\client\\src\\styles\\GlobalStyle.js":"7","D:\\projects\\spotify-profile\\client\\src\\pages\\PageNotFound.js":"8","D:\\projects\\spotify-profile\\client\\src\\styles\\Button.js":"9","D:\\projects\\spotify-profile\\client\\src\\pages\\Artist.js":"10","D:\\projects\\spotify-profile\\client\\src\\components\\Login.js":"11","D:\\projects\\spotify-profile\\client\\src\\components\\Loader.js":"12","D:\\projects\\spotify-profile\\client\\src\\components\\User.js":"13","D:\\projects\\spotify-profile\\client\\src\\components\\Logout.js":"14","D:\\projects\\spotify-profile\\client\\src\\pages\\Profile.js":"15","D:\\projects\\spotify-profile\\client\\src\\styles\\Section.js":"16","D:\\projects\\spotify-profile\\client\\src\\styles\\theme.js":"17","D:\\projects\\spotify-profile\\client\\src\\assets\\icons\\ArtistIcon.js":"18","D:\\projects\\spotify-profile\\client\\src\\components\\Track.js":"19","D:\\projects\\spotify-profile\\client\\src\\pages\\TopArtists.js":"20","D:\\projects\\spotify-profile\\client\\src\\components\\Artist.js":"21","D:\\projects\\spotify-profile\\client\\src\\components\\TopGenres.js":"22","D:\\projects\\spotify-profile\\client\\src\\components\\TopTracks.js":"23","D:\\projects\\spotify-profile\\client\\src\\pages\\TopTracks.js":"24","D:\\projects\\spotify-profile\\client\\src\\styles\\Label.js":"25","D:\\projects\\spotify-profile\\client\\src\\assets\\icons\\PlayIcon.js":"26"},{"size":625,"mtime":1612153669068,"results":"27","hashOfConfig":"28"},{"size":343,"mtime":1612324742315,"results":"29","hashOfConfig":"28"},{"size":1019,"mtime":1612325157008,"results":"30","hashOfConfig":"28"},{"size":10431,"mtime":1612597309296,"results":"31","hashOfConfig":"28"},{"size":2673,"mtime":1612558122052,"results":"32","hashOfConfig":"28"},{"size":1303,"mtime":1612592743585,"results":"33","hashOfConfig":"28"},{"size":1909,"mtime":1612558318694,"results":"34","hashOfConfig":"28"},{"size":1077,"mtime":1612560033296,"results":"35","hashOfConfig":"28"},{"size":360,"mtime":1612559226343,"results":"36","hashOfConfig":"28"},{"size":4178,"mtime":1612565385701,"results":"37","hashOfConfig":"28"},{"size":902,"mtime":1612560880173,"results":"38","hashOfConfig":"28"},{"size":1223,"mtime":1612601755297,"results":"39","hashOfConfig":"28"},{"size":2511,"mtime":1612595863864,"results":"40","hashOfConfig":"28"},{"size":729,"mtime":1612567346773,"results":"41","hashOfConfig":"28"},{"size":2041,"mtime":1612573681904,"results":"42","hashOfConfig":"28"},{"size":322,"mtime":1612595874328,"results":"43","hashOfConfig":"28"},{"size":601,"mtime":1612573902869,"results":"44","hashOfConfig":"28"},{"size":494,"mtime":1612153669058,"results":"45","hashOfConfig":"28"},{"size":4339,"mtime":1612597635284,"results":"46","hashOfConfig":"28"},{"size":2513,"mtime":1612596255255,"results":"47","hashOfConfig":"28"},{"size":4214,"mtime":1612597658706,"results":"48","hashOfConfig":"28"},{"size":1789,"mtime":1612596689659,"results":"49","hashOfConfig":"28"},{"size":1134,"mtime":1612597011519,"results":"50","hashOfConfig":"28"},{"size":2561,"mtime":1612597086437,"results":"51","hashOfConfig":"28"},{"size":212,"mtime":1611873765276,"results":"52","hashOfConfig":"28"},{"size":403,"mtime":1612211201769,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"15cb6kc",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\spotify-profile\\client\\src\\styles\\index.js",[],["112","113"],"D:\\projects\\spotify-profile\\client\\src\\styles\\PageHeader.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\mixins.js",[],"D:\\projects\\spotify-profile\\client\\src\\utils\\index.js",[],["114","115"],"D:\\projects\\spotify-profile\\client\\src\\pages\\TopGenres.js",[],"D:\\projects\\spotify-profile\\client\\src\\components\\Genre.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\GlobalStyle.js",[],["116","117"],"D:\\projects\\spotify-profile\\client\\src\\pages\\PageNotFound.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\Button.js",[],"D:\\projects\\spotify-profile\\client\\src\\pages\\Artist.js",["118"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getFollowStatus, followArtist, unfollowArtist } from \"utils\";\r\nimport styled from \"styled-components\";\r\nimport { Main, Section, Image, Label, Button } from \"styles\";\r\nimport { theme, mixins, media } from \"styles\";\r\nimport { BackIcon } from \"assets/icons\";\r\n\r\n// Components\r\nimport Loader from \"components/Loader\";\r\n\r\nconst { color, fontSize, transition } = theme;\r\n\r\nconst BackIconWrapper = styled.div`\r\n  ${mixins.flexRow}\r\n  ${mixins.flexAlignCenter}\r\n  color: ${color.lightGray};\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 15px;\r\n  left: 115px;\r\n  transition: ${transition};\r\n\r\n  svg {\r\n    width: 25px;\r\n    height: 25px;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${color.white};\r\n  }\r\n\r\n  ${media.tablet`\r\n    left: 15px;\r\n  `}\r\n`;\r\n\r\nconst CenteredSection = styled(Section)`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n  width: 300px;\r\n  height: 300px;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n\r\n  ${media.tablet`\r\n    width: 250px;\r\n    height: 250px;\r\n  `}\r\n\r\n  ${media.phone`\r\n    width: 150px;\r\n    height: 150px\r\n  `}\r\n`;\r\nconst ArtistImage = styled(Image)`\r\n  width: 300px;\r\n  height: 300px;\r\n  transition: ${transition};\r\n\r\n  ${media.tablet`\r\n    width: 250px;\r\n    height: 250px;\r\n  `}\r\n\r\n  ${media.phone`\r\n    width: 150px;\r\n    height: 150px\r\n  `}\r\n`;\r\n\r\nconst Chips = styled.div`\r\n  ${mixins.flexRow}\r\n  ${mixins.flexWrap}\r\n  ${mixins.flexJustifyCenter}\r\n  margin: 2em 0;\r\n  width: 500px;\r\n\r\n  ${media.tablet`\r\n    width: 300px;\r\n  `}\r\n\r\n  ${media.phone`\r\n    width: 250px;\r\n  `}\r\n`;\r\n\r\nconst Chip = styled.div`\r\n  color: ${color.lightGray};\r\n  background: ${color.gray};\r\n  font-size: ${fontSize.sm};\r\n  border-radius: 500px;\r\n  padding: 0.5em 2em;\r\n  margin: 0.5em;\r\n  white-space: nowrap;\r\n  ${mixins.ellipsis};\r\n  max-width: 500px;\r\n\r\n  ${media.tablet`\r\n    max-width: 300px;\r\n  `}\r\n\r\n  ${media.phone`\r\n    max-width: 250px;\r\n  `}\r\n`;\r\n\r\nconst FollowButton = styled(Button)`\r\n  background: transparent;\r\n  border: 1px solid ${color.white};\r\n  cursor: pointer;\r\n  width: 165px;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  &:active {\r\n    color: ${color.lightGray};\r\n    border: 1px solid ${color.lightGray};\r\n    transform: scale(1);\r\n  }\r\n\r\n  ${(props) =>\r\n    props.following &&\r\n    `\r\n    color: ${color.green};\r\n  `}\r\n`;\r\n\r\nfunction Artist(props) {\r\n  const { id, name, genres, image, followers } = props.location.state;\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [following, setFollowing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const response = await getFollowStatus(id);\r\n      setFollowing(response.data[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleBackClick = () => history.goBack();\r\n\r\n  const handleFollowClick = async () => {\r\n    if (!following) {\r\n      try {\r\n        await followArtist(id);\r\n        setFollowing(true);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      try {\r\n        await unfollowArtist(id);\r\n        setFollowing(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <Loader color={color.lightGray} isPage={true} />;\r\n\r\n  return (\r\n    <Main>\r\n      <BackIconWrapper onClick={handleBackClick}>\r\n        <BackIcon />\r\n      </BackIconWrapper>\r\n\r\n      <CenteredSection>\r\n        <ImageWrapper>\r\n          <ArtistImage src={image} alt=\"artist-profile-pic\" />\r\n        </ImageWrapper>\r\n\r\n        <h1>{name}</h1>\r\n\r\n        <Label>{followers.toLocaleString()} FOLLOWERS</Label>\r\n\r\n        <Chips>\r\n          {genres.map((genre, index) => (\r\n            <Chip key={index}>{genre}</Chip>\r\n          ))}\r\n        </Chips>\r\n\r\n        <FollowButton onClick={handleFollowClick} following={following}>\r\n          {following ? \"FOLLOWING\" : \"FOLLOW\"}\r\n        </FollowButton>\r\n      </CenteredSection>\r\n    </Main>\r\n  );\r\n}\r\n\r\nexport default Artist;\r\n","D:\\projects\\spotify-profile\\client\\src\\components\\Login.js",[],"D:\\projects\\spotify-profile\\client\\src\\components\\Loader.js",[],"D:\\projects\\spotify-profile\\client\\src\\components\\User.js",[],"D:\\projects\\spotify-profile\\client\\src\\components\\Logout.js",[],"D:\\projects\\spotify-profile\\client\\src\\pages\\Profile.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\Section.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\theme.js",[],"D:\\projects\\spotify-profile\\client\\src\\assets\\icons\\ArtistIcon.js",[],"D:\\projects\\spotify-profile\\client\\src\\components\\Track.js",["119"],"import React, { useEffect, useState } from \"react\";\r\nimport { convertTime, joinArtists } from \"utils\";\r\n\r\n// Components\r\nimport Loader from \"components/Loader\";\r\n\r\n// Icons\r\nimport { PlayIcon, PauseIcon, NoMusicIcon, TrackIcon } from \"assets/icons\";\r\n\r\n// Styles\r\nimport styled from \"styled-components\";\r\nimport { Image } from \"styles\";\r\nimport { theme, mixins, media } from \"styles\";\r\n\r\nconst { color, fontSize, transition } = theme;\r\n\r\nconst Container = styled.div`\r\n  ${mixins.flexRow}\r\n  ${mixins.flexAlignCenter}\r\n  width: 100%;\r\n  padding: 0.5em 0;\r\n  transition: ${transition};\r\n  cursor: pointer;\r\n\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      background: ${color.gray};\r\n\r\n      img {\r\n        opacity: 0.5;\r\n      }\r\n\r\n      svg {\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    `\r\n    background: ${color.gray};\r\n\r\n    p {\r\n      color: ${color.lightGreen};\r\n    }\r\n    \r\n    img {\r\n      opacity: 0.5;\r\n    }\r\n\r\n    div > svg {\r\n      display: block;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst PreviewWrapper = styled.div`\r\n  position: relative;\r\n  margin-left: 0.5em;\r\n`;\r\n\r\nconst TrackImage = styled(Image)`\r\n  width: 50px;\r\n  height: 50px;\r\n`;\r\n\r\nconst TrackIconWrapper = styled.div`\r\n  ${mixins.flexCenter}\r\n  color: ${color.lightGray};\r\n  background-color: ${color.gray};\r\n  width: 50px;\r\n  height: 50px;\r\n\r\n  svg {\r\n    width: 25px;\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  svg {\r\n    display: none;\r\n    border: 1px solid ${color.white};\r\n    border-radius: 50%;\r\n    width: 25px;\r\n    height: 25px;\r\n  }\r\n\r\n  ${(props) =>\r\n    !props.disable &&\r\n    `\r\n    &:hover {\r\n      svg {\r\n        width: 30px;\r\n        height: 30px;\r\n      }\r\n    }\r\n\r\n    &:active {\r\n      svg {\r\n        color: ${color.lightGray};\r\n        border: 1px solid ${color.lightGray};\r\n        width: 25px;\r\n        height: 25px;\r\n      }\r\n    }\r\n  `}\r\n`;\r\n\r\nconst TrackRank = styled.p`\r\n  font-size: ${fontSize.sm};\r\n  margin: 0 2em;\r\n`;\r\n\r\nconst TrackInfo = styled.div`\r\n  ${mixins.flexRow}\r\n  ${mixins.flexSpaceBetween}\r\n  ${mixins.flexAlignCenter}\r\n  width: 100%;\r\n`;\r\n\r\nconst TrackCaption = styled.div`\r\n  display: table;\r\n  table-layout: fixed;\r\n  text-align: left;\r\n  width: 100%;\r\n`;\r\n\r\nconst TrackName = styled.p`\r\n  ${mixins.ellipsis};\r\n  color: ${color.white};\r\n`;\r\n\r\nconst TrackArtist = styled.p`\r\n  ${mixins.ellipsis};\r\n  font-size: ${fontSize.sm};\r\n`;\r\n\r\nconst TrackDuration = styled.p`\r\n  font-size: ${fontSize.sm};\r\n`;\r\n\r\nconst DurationWrapper = styled.div`\r\n  margin-right: 0.5em;\r\n  padding-left: 1em;\r\n`;\r\n\r\nfunction Track(props) {\r\n  const { rank, image, name, artists, duration, preview, activeTrack } = props;\r\n\r\n  const [trackArtists, setTrackArtists] = useState(\"\");\r\n  const [trackDuration, setTrackDuration] = useState(\"\");\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTrackArtists(joinArtists(artists));\r\n    setTrackDuration(convertTime(duration));\r\n    setIsPlaying(preview ? activeTrack === preview : false);\r\n    setDisable(preview === null);\r\n  }, [duration, artists, preview, activeTrack]);\r\n\r\n  const handleTrackClick = () => {\r\n    if (disable) return null;\r\n    props.onActiveTrackChange(preview);\r\n  };\r\n\r\n  return (\r\n    <Container active={isPlaying} onClick={handleTrackClick}>\r\n      <PreviewWrapper>\r\n        {image ? (\r\n          <TrackImage src={image} alt=\"track-image\" />\r\n        ) : (\r\n          <TrackIconWrapper>\r\n            <TrackIcon />\r\n          </TrackIconWrapper>\r\n        )}\r\n        <IconWrapper disable={disable}>\r\n          {disable ? <NoMusicIcon /> : isPlaying ? <PauseIcon /> : <PlayIcon />}\r\n        </IconWrapper>\r\n      </PreviewWrapper>\r\n\r\n      <TrackRank>{rank}</TrackRank>\r\n      <TrackInfo>\r\n        <TrackCaption>\r\n          <TrackName>{name}</TrackName>\r\n          <TrackArtist>{trackArtists}</TrackArtist>\r\n        </TrackCaption>\r\n\r\n        <DurationWrapper>\r\n          {isPlaying ? (\r\n            <Loader color={color.lightGreen} isPage={false} />\r\n          ) : (\r\n            <TrackDuration>{trackDuration}</TrackDuration>\r\n          )}\r\n        </DurationWrapper>\r\n      </TrackInfo>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Track;\r\n","D:\\projects\\spotify-profile\\client\\src\\pages\\TopArtists.js",[],"D:\\projects\\spotify-profile\\client\\src\\components\\Artist.js",[],"D:\\projects\\spotify-profile\\client\\src\\components\\TopGenres.js",["120","121"],"import React, { useState, useEffect } from \"react\";\r\nimport { getTopGenresLong } from \"utils\";\r\nimport styled from \"styled-components\";\r\nimport { Section, Header, MoreLink } from \"styles\";\r\nimport { theme, mixins, media } from \"styles\";\r\n\r\n// Components\r\nimport Genre from \"components/Genre\";\r\n\r\nconst { color, fontSize } = theme;\r\n\r\nconst Genres = styled.div`\r\n  ${mixins.flexColumn}\r\n  width: 100%;\r\n`;\r\n\r\nconst Axis = styled.div`\r\n  background-color: ${color.gray};\r\n  margin-top: 1em;\r\n  width: 100%;\r\n  height: 1px;\r\n`;\r\n\r\nconst Coords = styled.div`\r\n  ${mixins.flexRow}\r\n  ${mixins.flexSpaceBetween}\r\n  width: 100%;\r\n`;\r\n\r\nconst Coord = styled.p`\r\n  margin-top: 0.5em;\r\n`;\r\n\r\nfunction TopGenres() {\r\n  const [topGenres, setTopGenres] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const long = await getTopGenresLong(5);\r\n      setTopGenres(long);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Header>\r\n        <h3>Top Genres All Time</h3>\r\n        <MoreLink to=\"/top-genres\">SEE MORE</MoreLink>\r\n      </Header>\r\n\r\n      {topGenres ? (\r\n        <Genres>\r\n          {Object.keys(topGenres.genres).map((genre, index) => (\r\n            <Genre\r\n              key={index}\r\n              genre={genre}\r\n              width={(topGenres.genres[genre] / topGenres.ratio) * 100}\r\n              percentage={topGenres.genres[genre]}\r\n            />\r\n          ))}\r\n        </Genres>\r\n      ) : null}\r\n\r\n      <Axis />\r\n\r\n      {topGenres ? (\r\n        <Coords>\r\n          {topGenres.range.map((coord, index) => (\r\n            <Coord key={index}>{coord}</Coord>\r\n          ))}\r\n        </Coords>\r\n      ) : null}\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default TopGenres;\r\n","D:\\projects\\spotify-profile\\client\\src\\components\\TopTracks.js",[],"D:\\projects\\spotify-profile\\client\\src\\pages\\TopTracks.js",[],"D:\\projects\\spotify-profile\\client\\src\\styles\\Label.js",[],"D:\\projects\\spotify-profile\\client\\src\\assets\\icons\\PlayIcon.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"122","replacedBy":"128"},{"ruleId":"124","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":144,"column":6,"nodeType":"132","endLine":144,"endColumn":8,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":13,"column":25,"nodeType":"136","messageId":"137","endLine":13,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":5,"column":25,"nodeType":"136","messageId":"137","endLine":5,"endColumn":30},{"ruleId":"134","severity":1,"message":"138","line":10,"column":16,"nodeType":"136","messageId":"137","endLine":10,"endColumn":24},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],["139"],["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["141"],"no-unused-vars","'media' is defined but never used.","Identifier","unusedVar","'fontSize' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [getData]",{"range":"144","text":"145"},[2720,2722],"[getData]"]